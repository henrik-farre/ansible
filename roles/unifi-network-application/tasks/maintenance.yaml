# From https://help.ui.com/hc/en-us/articles/204911424-UniFi-How-to-remove-prune-older-data-and-adjust-mongo-database-size
# looks like it has moved to https://help.ui.com/hc/en-us/articles/360006634094-UniFi-Repairing-Database-Issues-on-the-UniFi-Network-Application#3
# and script is now called https://help.ui.com/hc/en-us/article_attachments/360008640574/CK_repair.js
- name: MongoDB maintenance prune script
  ansible.builtin.copy:
    dest: /srv/unifi-network-application/data/config/mongo_prune_js.js
    src: root/mongo_prune_js.js
    owner: root
    mode: 0644

# Script is run inside Docker
- name: MongoDB maintenance script
  ansible.builtin.copy:
    dest: /srv/unifi-network-application/data/config/mongodb_maintenance.sh
    content: |
      #!/bin/bash
      /usr/bin/mongo --port 27117 < /config/mongo_prune_js.js
    owner: root
    mode: 0750

- name: MongoDB maintenance service
  ansible.builtin.copy:
    dest: /usr/local/lib/systemd/system/mongodb_maintenance.service
    content: |
      [Unit]
      Description=MongoDB maintenance
      OnFailure=status-email@%n.service

      [Service]
      Type=oneshot
      ExecStart=/usr/bin/docker exec unifi-network-application /config/mongodb_maintenance.sh
    owner: root
    mode: 0644

- name: MongoDB maintenance timer
  ansible.builtin.copy:
    dest: /usr/local/lib/systemd/system/mongodb_maintenance.timer
    content: |
      [Unit]
      Description=MongoDB maintenance

      [Timer]
      OnCalendar=monthly
      Persistent=True

      [Install]
      WantedBy=timers.target
    owner: root
    mode: 0644

- name: Ensure mongodump is installed inside container
  ansible.builtin.copy:
    dest: /srv/unifi-network-application/deploy/custom-cont-init.d/mongodump-install.sh
    content: |
      #!/bin/bash
      apt update
      apt install -y mongo-tools
    mode: 0750

# Script is run inside Docker
- name: MongoDB dump script
  ansible.builtin.copy:
    dest: /srv/unifi-network-application/data/config/mongodb_dump.sh
    content: |
      #!/bin/bash
      /usr/bin/mongodump --port 27117 --out=/backup/mongodump/
    owner: root
    mode: 0750

- name: Install unifi-network-application backup script
  ansible.builtin.copy:
    dest: /srv/unifi-network-application/scripts/backup-unifi-network-application.sh
    content: |
      #!/bin/bash
      set -o nounset
      set -o errexit
      set -o pipefail

      BACKUP_LOCATION=/shared/backup/unifi-network-application/$(date +"%Y-%m-%d")

      mkdir -p "$BACKUP_LOCATION"

      rm -rvf --preserve-root=all "/srv/unifi-network-application/data/backup/mongodump"
      mkdir -p "/srv/unifi-network-application/data/backup/mongodump"
      /usr/bin/docker exec unifi-network-application /config/mongodb_dump.sh

      /usr/bin/tar Jcvf ${BACKUP_LOCATION}/mongodump.tar.xz /srv/unifi-network-application/data/backup/mongodump
      # DB files might change while backup is running and cause tar to return an error
      /usr/bin/tar Jcvf ${BACKUP_LOCATION}/config.tar.xz /srv/unifi-network-application/data/config || true
    mode: 0750

- name: Install systemd services for backup
  ansible.builtin.copy:
    dest: /usr/local/lib/systemd/system/backup-unifi-network-application.service
    content: |
      [Unit]
      Description=Backup unifi-network-application
      OnFailure=status-email@%n.service

      [Service]
      WorkingDirectory=/srv/unifi-network-application/deploy

      Type=oneshot
      ExecStart=/srv/unifi-network-application/scripts/backup-unifi-network-application.sh
    owner: root
    mode: 0644

- name: Install systemd timers
  ansible.builtin.copy:
    dest: /usr/local/lib/systemd/system/backup-unifi-network-application.timer
    content: |
      [Unit]
      Description=Backup unifi-network-application
      After=network-online.target
      Wants=network-online.target

      [Timer]
      OnCalendar=daily
      Persistent=True

      [Install]
      WantedBy=timers.target
    owner: root
    mode: 0644

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable systemd timers
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - mongodb_maintenance.timer
    - backup-unifi-network-application.timer
