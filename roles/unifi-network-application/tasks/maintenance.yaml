- name: Install unifi-network-application backup script
  ansible.builtin.copy:
    dest: /srv/unifi-network-application/scripts/backup-unifi-network-application.sh
    content: |
      #!/bin/bash
      set -o nounset
      set -o errexit
      set -o pipefail

      BACKUP_LOCATION=/shared/backup/unifi-network-application/$(date +"%Y-%m-%d")

      mkdir -p "$BACKUP_LOCATION"

      rm -rvf --preserve-root=all "/srv/unifi-network-application/data/mongodb/backup/mongodump"
      mkdir -p "/srv/unifi-network-application/data/mongodb/backup/mongodump"

      # mongodb container
      /usr/bin/docker exec unifi-network-application-db mongodump -o /backup/mongodump

      /usr/bin/tar zcvf ${BACKUP_LOCATION}/mongodump.tar.gz /srv/unifi-network-application/data/mongodb/backup/mongodump
      # Logs and other files might change while tar is running
      /usr/bin/tar zcvf ${BACKUP_LOCATION}/unifi-config.tar.gz /srv/unifi-network-application/data/unifi-network-application/config || true
    mode: 0750

- name: Install systemd services for backup
  ansible.builtin.copy:
    dest: /usr/local/lib/systemd/system/backup-unifi-network-application.service
    content: |
      [Unit]
      Description=Backup unifi-network-application
      OnFailure=status-email@%n.service

      [Service]
      WorkingDirectory=/srv/unifi-network-application/

      Type=oneshot
      ExecStart=/srv/unifi-network-application/scripts/backup-unifi-network-application.sh
    owner: root
    mode: 0644

- name: Install systemd timers
  ansible.builtin.copy:
    dest: /usr/local/lib/systemd/system/backup-unifi-network-application.timer
    content: |
      [Unit]
      Description=Backup unifi-network-application
      After=network-online.target
      Wants=network-online.target

      [Timer]
      OnCalendar=daily
      Persistent=True

      [Install]
      WantedBy=timers.target
    owner: root
    mode: 0644

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable systemd timers
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - backup-unifi-network-application.timer
