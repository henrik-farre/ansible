---
- name: Ensure unifi controller is installed and configured
  become: true
  tags:
    - unifi-controller
  block:
    - name: Ensure needed directories exist
      ansible.builtin.file:
        path: "/srv/unifi-controller/{{ item }}"
        state: directory
        mode: 0775
        owner: root
        group: docker
      loop:
        - data
        - deploy

    - name: Ensure docker-compose.yml exists for unifi
      ansible.builtin.template:
        src: docker-compose.yml.j2
        dest: /srv/unifi-controller/deploy/docker-compose.yml
        mode: 0664
        owner: root
        group: docker

    - name: Deploy Docker Compose stack
      community.docker.docker_compose:
        project_name: unifi-controller
        project_src: /srv/unifi-controller/deploy

    # Requires manual restore of backup
    - name: Wait until the file default site is present before continuing
      ansible.builtin.wait_for:
        path: /srv/unifi-controller/data/config/data/sites/default

    # TODO: owner/group
    # https://help.ubnt.com/hc/en-us/articles/215458888-UniFi-How-to-further-customize-USG-configuration-with-config-gateway-json
    - name: Ensure custom config.gateway.json is deployed
      ansible.builtin.template:
        src: "config.gateway.json.j2"
        dest: /srv/unifi-controller/data/config/data/sites/default/config.gateway.json
        owner: 911
        group: 911
        mode: 0600

    # https://help.ui.com/hc/en-us/articles/205146040-UniFi-Explaining-the-config-properties-File
    # - Disable analytics
    # Note: remember to force provision devices for changes to apply
    - name: Ensure custom config.properties is deployed
      ansible.builtin.copy:
        content: |
          config.system_cfg.1=system.analytics.anonymous=disabled
        dest: /srv/unifi-controller/data/config/data/sites/default/config.properties
        owner: 911
        group: 911
        mode: 0600

#>    - name: MongoDB maintenance script
#>      ansible.builtin.copy:
#>        dest: /usr/local/sbin/mongodb_maintenance.sh
#>        content: |
#>          #!/bin/bash
#>          /usr/bin/mongo --port 27117 < /root/mongo_prune_js.js
#>        owner: root
#>        mode: 0750
#>
#>    - name: MongoDB maintenance service
#>      ansible.builtin.copy:
#>        dest: /etc/systemd/system/mongodb_maintenance.service
#>        content: |
#>          [Unit]
#>          Description=MongoDB maintenance
#>          OnFailure=status-email@%n.service
#>
#>          [Service]
#>          Type=oneshot
#>          ExecStart=/usr/local/sbin/mongodb_maintenance.sh
#>        owner: root
#>        mode: 0644
#>
#>    # From https://help.ui.com/hc/en-us/articles/204911424-UniFi-How-to-remove-prune-older-data-and-adjust-mongo-database-size
#>    - name: MongoDB maintenance prune script
#>      ansible.builtin.copy:
#>        dest: /root/mongo_prune_js.js
#>        src: root/mongo_prune_js.js
#>        owner: root
#>        mode: 0644
#>
#>    - name: MongoDB maintenance timer
#>      ansible.builtin.copy:
#>        dest: /etc/systemd/system/mongodb_maintenance.timer
#>        content: |
#>          [Unit]
#>          Description=MongoDB maintenance
#>
#>          [Timer]
#>          OnCalendar=monthly
#>          Persistent=True
#>
#>          [Install]
#>          WantedBy=timers.target
#>        owner: root
#>        mode: 0644
#>
#>    - name: Enable timer unit for MongoDB maintenance
#>      ansible.builtin.systemd:
#>        name: mongodb_maintenance.timer
#>        state: started
#>        enabled: yes
