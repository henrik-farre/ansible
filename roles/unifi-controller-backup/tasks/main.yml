---
- name: Ensure ssh config exists for unifi controller
  become: true
  blockinfile:
    dest: "/root/.ssh/config"
    create: yes
    block: |
      Host {{ hostvars[groups['unifi-controller'][0]]['ansible_fqdn'] }}
        IdentityFile ~/.ssh/id_rsa.unifi-controller
    marker: "# {mark} ANSIBLE MANAGED BLOCK unifi_controller"
    mode: 0600
  tags:
    - unifi-controller

- name: Add hosts as known hosts
  become: yes
  known_hosts:
    path: "/root/.ssh/known_hosts"
    name: "{{ hostvars[groups['unifi-controller'][0]]['ansible_fqdn'] }}"
    key: "{{ lookup('pipe', 'ssh-keyscan -t rsa ' + hostvars[groups['unifi-controller'][0]]['ansible_fqdn']) }}"
  tags:
    - unifi-controller

- name: Ensure backup service exists
  become: yes
  copy:
    content: |
      [Unit]
      Description=Start AWX backup job of unifi controller
      OnFailure=status-email@%n.service

      [Service]
      Type=oneshot
      User=enrique
      ExecStart=/shared/enrique/.local/bin/tower-cli job launch -J "Unifi controller - backup" --wait --no-input
      dest: /etc/systemd/system/unifi-backup.service
    mode: 0644
    owner: root
  tags:
    - unifi-controller

- name: Ensure backup timer exists
  become: yes
  copy:
    content: |
      [Unit]
      Description=Unifi controller backup
      Wants=network-online.target
      After=network-online.target

      [Timer]
      OnBootSec=10min
      RandomizedDelaySec=600

      [Install]
      WantedBy=timers.target
    dest: /etc/systemd/system/unifi-backup.timer
    mode: 0644
    owner: root
  tags:
    - unifi-controller
