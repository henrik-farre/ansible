---
- name: Ensure Raspberry pi is correctly configured
  become: true
  tags:
    - raspbian
  block:
    - name: Ensure root file system is mounted with correct options
      ansible.posix.mount:
        path: /
        src: LABEL=RASPIROOT
        fstype: ext4
        opts: defaults,relatime,commit=60
        passno: 1
        dump: 0
        state: present

    # unified_cgroup_hierarchy = required by home-assistant
    # elevator = lowest cpu overhead
    - name: Ensure /boot/firmware/cmdline.txt contains correct options
      ansible.builtin.copy:
        dest: /boot/firmware/cmdline.txt
        mode: 0755
        content: |
          console=tty0 console=ttyS1,115200 root=LABEL=RASPIROOT rw fsck.repair=yes net.ifnames=0 cma=64M rootwait systemd.unified_cgroup_hierarchy=false elevator=none

    - name: Ensure /boot/firmware/config.txt containts correct options
      ansible.builtin.lineinfile:
        line: '{{ item.key }}={{ item.value }}'
        dest: /boot/firmware/config.txt
        regexp: "^{{ item.key }}="
      loop: "{{ config_items | dict2items }}"
      vars:
        config_items:
          gpu_mem: 16
          arm_64bit: 1

    # Without this drive will not show trim support
    # This is for 14b0:0206 StarTech.com Ltd. SSD 860 EVO 250G
    - name: Ensure trim support is enabled on USB SSD
      ansible.builtin.copy:
        dest: /etc/udev/rules.d/10-trim.rules
        mode: 0644
        content: |
          ACTION=="add|change", ATTRS{idVendor}=="14b0", ATTRS{idProduct}=="0206", SUBSYSTEM=="scsi_disk", ATTR{provisioning_mode}="unmap"

    - name: Ensure fstrim timer is started on supported devices
      become: true
      ansible.builtin.systemd:
        name: fstrim.timer
        state: started
        enabled: yes

    - name: Disable unneeded services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - rsyslog.service
        - wpa_supplicant
      failed_when: False

    - name: Remove unneeded packages
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: absent
        purge: yes
        autoclean: yes
        autoremove: yes
      vars:
        packages:
          - rsyslog

    # https://github.com/pi-hole/docker-pi-hole/issues/153
    # - name: Ensure pihole-FTL.log is truncated
    #   ansible.builtin.cron:
    #     name: pihole-FTL.log truncate
    #     minute: 5
    #     hour: 0
    #     user: root
    #     job: "/usr/bin/truncate --size=2M --no-create /var/log/pihole/pihole-FTL.log"
    #     cron_file: pihole_truncate
