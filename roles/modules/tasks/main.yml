---
- name: Clean modprobe.d, Capture files in path and register
  ansible.builtin.command: ls -1 /etc/modprobe.d
  register: modprobe_d_files
  changed_when: False
  tags:
    - modules
    - modprobe

# FIXME: this removes files install by other roles like docker
- name: Clean modprobe.d, Remove files except specified
  become: true
  ansible.builtin.file:
    path: "/etc/modprobe.d/{{ item }}"
    state: absent
  with_items:
    - "{{ modprobe_d_files.stdout_lines }}"
  when:
    - modules_modprobe_d is defined
    - item not in modules_modprobe_d
  tags:
    - modules
    - modprobe

- name: Ensure modules are configured
  become: true
  ansible.builtin.copy:
    src: "etc/modprobe.d/{{ item }}"
    dest: "/etc/modprobe.d/{{ item }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "{{ modules_modprobe_d }}"
  when:
    - modules_modprobe_d is defined
  notify:
    - "Rebuild initial ram disk on {{ ansible_facts.distribution }}"
  tags:
    - modules
    - modprobe

- name: Ensure modules are loaded
  become: true
  ansible.builtin.copy:
    src: "etc/modules-load.d/{{ item }}"
    dest: "/etc/modules-load.d/{{ item }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "{{ modules_load_d }}"
  when:
    - modules_load_d is defined
  notify:
    - "Rebuild initial ram disk on {{ ansible_facts.distribution }}"
  tags:
    - modules

- name: Ensure support for Unified Kernel Image
  become: true
  tags:
    - modules
  when: bootloader == "systemd-boot-uki"
  block:
    - name: Ensure /etc/kernel exists
      ansible.builtin.file:
        path: /etc/kernel/
        state: directory
        mode: 0755
        owner: root
        group: root

    - name: Ensure /boot/EFI/Linux exists
      ansible.builtin.file:
        path: /boot/EFI/Linux
        state: directory
        mode: 0755
        owner: root
        group: root

    # NOTE: this only works with one entry
    - name: Ensure cmdline is configured
      ansible.builtin.template:
        dest: /etc/kernel/cmdline
        src: etc/kernel/cmdline.j2
        owner: root
        group: root
        mode: 0644
      notify:
        - "Rebuild initial ram disk on {{ ansible_facts.distribution }}"
      loop: "{{ systemd_boot.entries }}"
      when:
        - systemd_boot.entries
        - ansible_facts.distribution == "Archlinux"

    - name: Ensure preset settings for kernel exists
      ansible.builtin.template:
        dest: "/etc/mkinitcpio.d/linux{% if linux_kernel_variant is defined %}-{{ linux_kernel_variant }}{% endif %}.preset"
        src: etc/mkinitcpio.d/linux.preset.j2
        owner: root
        group: root
        mode: 0644
      notify:
        - "Rebuild initial ram disk on {{ ansible_facts.distribution }}"
      when:
        - ansible_facts.distribution == "Archlinux"

- name: Ensure mkinitcpio is configured
  become: true
  ansible.builtin.template:
    dest: /etc/mkinitcpio.conf
    src: etc/mkinitcpio.conf.j2
    owner: root
    group: root
    mode: 0644
  notify:
    - "Rebuild initial ram disk on {{ ansible_facts.distribution }}"
  tags:
    - modules
  when: ansible_facts.distribution == "Archlinux"
