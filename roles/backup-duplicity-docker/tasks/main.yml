---
- block:
  - name: Remove local installed duplicity and dependencies
    become: true
    pacman:
      name: "{{ item }}"
      state: absent
    with_items:
      - duplicity
      - python2-fasteners
      - python2-monotonic
    tags:
      - backup

  - name: Remove old backup scripts, cronjob and directories
    become: true
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - /usr/local/sbin/backup-clean.sh
      - /usr/local/sbin/backup-collection-status.sh
      - /usr/local/sbin/backup-list.sh
      - /usr/local/sbin/backup-remove-old.sh
      - /usr/local/sbin/backup-restore.sh
      - /usr/local/sbin/backup.sh
      - /usr/local/sbin/backup-verify.sh
      - /usr/local/sbin/dump-information.sh
      - "/usr/local/sbin/{{ inventory_hostname }}-backup.sh"
      - /usr/local/sbin/includes.sh
      - /usr/local/sbin/user-notification.sh
      - /root/.duplicity
      - /usr/local/etc/duplicity
      - /etc/cron.d/1backup
      - /usr/local/etc/rdiff-backup
      - /usr/local/etc/duplicity-docker/{{ inventory_hostname }}.yml
      - /usr/local/etc/duplicity-docker/duplicity.yml
      - /var/log/backup
      - /var/log/duplicity.log
      - /var/log/duplicity.log.1.gz
      - /var/log/duplicity.log.2.gz
      - /var/log/duplicity.log.3.gz
      - /var/log/duplicity.log.4.gz
    tags:
      - backup

  - name: Ensure directory exist
    become: true
    file:
      path: /usr/local/etc/duplicity-docker
      mode: 0750
      owner: root
      group: docker
      state: directory
    tags:
      - backup

    # Note "cmd" is for running other actions like "list", e.g.:
    # docker-compose -f duplicity-cmd.yml run --rm duplicity list home
  - name: Ensure docker compose files exists for current host
    become: true
    template:
      src: "usr/local/etc/duplicity-docker/duplicity.yml.j2"
      dest: "/usr/local/etc/duplicity-docker/duplicity-{{ item }}.yml"
      mode: 0640
      owner: root
      group: docker
    with_items:
      - backup
      - clean
      - remove-old
      - cmd
    tags:
      - backup

  - name: Install directory excludes
    become: true
    copy:
      src: "excludes/{{ item.src }}"
      dest: "{{ item.dest }}/.duplicity_exclude"
      owner: root
      mode: 0400
    with_items:
      - "{{ duplicity.excludes }}"
    when:
      - duplicity.excludes is defined
    tags:
      - backup

  - name: Ensure failed service email script exists
    become: true
    copy:
      content: |
        #!/bin/bash

        /usr/bin/sendmail -t <<ERRMAIL
        To: $1
        From: systemd on $HOSTNAME <root@$HOSTNAME>
        Subject: $2
        Content-Transfer-Encoding: 8bit
        Content-Type: text/plain; charset=UTF-8

        $(systemctl status --full "$2")
        ERRMAIL
      dest: /usr/local/bin/systemd-email
      mode: 0750
      owner: root
      group: mail
    tags:
      - backup

  - name: Ensure failed service unit exists
    become: true
    copy:
      content: |
        [Unit]
        Description=status email for %i to user

        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/systemd-email henrik.farre@gmail.com %i
        User=root
        Group=systemd-journal
      dest: /etc/systemd/system/status-email-enrique@.service
      mode: 0644
      owner: root
    tags:
      - backup

  - name: Install ssh keys
    become: true
    copy:
      src: "root/dot.ssh/{{ item }}"
      dest: "/root/.ssh/{{ item }}"
      owner: root
      group: root
      mode: 0400
    with_items:
      - id_rsa.backup
      - id_rsa.backup.pub
    tags:
      - backup

  - name: Ensure ssh config exists for backup host
    become: true
    blockinfile:
      dest: "/root/.ssh/config"
      create: yes
      block: "{{ ssh_config }}"
      marker: "# {mark} ANSIBLE MANAGED BLOCK backup_host"
    vars:
      ssh_config: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          38613532373632636464336138323731646137316632653536616662663166363663616261626136
          3837333565623934363536613032646633303166633238640a363963356666363761386262313930
          39393564353531323439653630373835323338336665306466663331613438656438363535316632
          6534376532303739370a393464373532356630396430626233653064636333386133316131376236
          63363733303039363633623339383063366666356636363665303137343638613764303961313933
          39623034366362623635656436663864623866366262333166393335613964653532366434393635
          37326361323861616632656662653533383963356231646331653835336337323038393232623666
          34383663653934636431363064373236666435643963383636616437383838626231373036633333
          6135
    tags:
      - backup

  - name: Import ssh host key
    become: true
    known_hosts:
      path: /root/.ssh/known_hosts
      name: "{{ duplicity.remote_host }}"
      key: "{{ lookup('pipe', 'ssh-keyscan -t rsa {{ duplicity.remote_host }}') }}"
    tags:
      - backup

  - name: GPG config
    become: true
    copy:
      content: |
        pinentry-mode loopback
      dest: "/root/.gnupg/gpg.conf"
      owner: root
      group: root
      mode: 0400
    tags:
      - backup

  - name: Import gpg keys, devault
    become: true
    copy:
      src: "root/gpg/private.asc.vault"
      dest: "/root/.gnupg/private.asc"
      owner: root
      group: root
      mode: 0400
    tags:
      - backup

  - name: Import ownertrust, devault
    become: true
    copy:
      src: "root/gpg/ownertrust.vault"
      dest: "/root/.gnupg/ownertrust"
      owner: root
      group: root
      mode: 0400
    tags:
      - backup

  - name: Import gpg keys
    become: true
    shell: echo "{{ duplicity.passphrase }}" | gpg --passphrase-fd 0 --import private.asc
    args:
      chdir: "/root/.gnupg"
    tags:
      - backup

  - name: Import ownertrust
    become: true
    shell: gpg --import-ownertrust ownertrust
    args:
      chdir: "/root/.gnupg"
    tags:
      - backup

  - name: Install systemd services
    become: true
    template:
      src: "etc/systemd/system/duplicity-docker-tpl.service.j2"
      dest: "/etc/systemd/system/duplicity-docker-{{ item }}.service"
      owner: root
      mode: 0644
    with_items:
      - backup
      - clean
      - remove-old
    tags:
      - backup

  - name: Install systemd timers
    become: true
    template:
      src: "etc/systemd/system/duplicity-docker-tpl.timer.j2"
      dest: "/etc/systemd/system/duplicity-docker-{{ item }}.timer"
      owner: root
      mode: 0644
    with_items:
      - backup
      - clean
      - remove-old
    tags:
      - backup

  - name: Enable systemd services
    become: true
    systemd:
      name: "duplicity-docker-{{ item }}.service"
      enabled: yes
      daemon_reload: yes
    with_items:
      - backup
      - clean
      - remove-old
    tags:
      - backup

  - name: Enable systemd timers
    become: true
    systemd:
      name: "duplicity-docker-{{ item }}.timer"
      enabled: yes
      state: started
      daemon_reload: yes
    with_items:
      - backup
      - clean
      - remove-old
    tags:
      - backup

  always:
    - name: Ensure latest docker image is pulled
      docker_image:
        name: rockhopperdk/duplicity-docker:latest
        force: yes
      tags:
        - backup

    - name: Cleanup git clone
      file:
        path: /tmp/dupebackup
        state: absent
      delegate_to: localhost
      tags:
        - backup

    - name: Cleanup gpg keys
      become: true
      file:
        path: "/root/.gnupg/private.asc"
        state: absent
      tags:
        - backup

    - name: Cleanup ownertrust
      become: true
      file:
        path: "/root/.gnupg/ownertrust"
        state: absent
      tags:
        - backup
