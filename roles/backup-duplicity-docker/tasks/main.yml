---
- name: Ensure duplicity is configured for backup
  become: true
  tags:
    - backup
    - duplicity-backup
  block:
    - name: Ensure vaulted vars are loaded
      ansible.builtin.include_vars:
        file: backup_duplicity.yml.vault

    - name: Include cleanup tasks
      ansible.builtin.include_tasks: cleanup.yml

    - name: Ensure directory exist
      ansible.builtin.file:
        path: /usr/local/etc/duplicity-docker
        mode: 0750
        owner: root
        group: docker
        state: directory

    - name: Ensure docker compose env file exists for current host
      ansible.builtin.template:
        src: "usr/local/etc/duplicity-docker/settings.env.j2"
        dest: "/usr/local/etc/duplicity-docker/settings.env"
        mode: 0640
        owner: root
        group: docker

      # Note "cmd" is for running other actions like "list", e.g.:
      # docker-compose -f duplicity-cmd.yml run --rm duplicity list home
    - name: Ensure docker compose files exists for current host
      ansible.builtin.template:
        src: "usr/local/etc/duplicity-docker/duplicity.yml.j2"
        dest: "/usr/local/etc/duplicity-docker/duplicity-{{ item }}.yml"
        mode: 0640
        owner: root
        group: docker
      with_items:
        - backup
        - clean
        - remove-old-inc
        - remove-old-set
        - cmd

    - name: Install directory excludes
      ansible.builtin.copy:
        src: "excludes/{{ item.src }}"
        dest: "{{ item.dest }}/.duplicity_exclude"
        owner: root
        mode: 0400
      with_items:
        - "{{ duplicity.excludes }}"
      when:
        - duplicity.excludes is defined

    - name: Include ssh setup tasks
      ansible.builtin.include_tasks: ssh_setup.yml

    - name: Include gpg setup tasks
      ansible.builtin.include_tasks: gpg_setup.yml

    - name: Install systemd services
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Duplicity Backup running in docker: performs %i
          Requires=docker.service
          After=docker.service network-online.target
          Wants=network-online.target
          OnFailure=status-email@%n.service
          ConditionPathExistsGlob=!/var/cache/duplicity/*/lockfile.lock

          [Service]
          WorkingDirectory=/usr/local/etc/duplicity-docker

          # Remove old containers, images and volumes
          ExecStartPre=-/usr/bin/docker-compose -f duplicity-%i.yml down -v
          ExecStartPre=-/usr/bin/docker-compose -f duplicity-%i.yml rm -fv
          ExecStartPost=-/usr/bin/docker-compose -f duplicity-%i.yml down -v

          Type=oneshot
          ExecStart=/usr/bin/docker-compose -f duplicity-%i.yml up duplicity-%i
        dest: "/usr/local/lib/systemd/system/duplicity-docker@.service"
        owner: root
        mode: 0644

    - name: Install weekly systemd timers
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Duplicity: %i
          After=network-online.target
          Wants=network-online.target

          [Timer]
          Unit=duplicity-docker@%i.service
          OnCalendar=weekly
          Persistent=True
          RandomizedDelaySec=600

          [Install]
          WantedBy=timers.target
        dest: "/usr/local/lib/systemd/system/duplicity-docker-weekly@.timer"
        owner: root
        mode: 0644

    - name: Install daily systemd timers
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Duplicity: %i
          After=network-online.target
          Wants=network-online.target

          [Timer]
          Unit=duplicity-docker@%i.service
          OnCalendar=daily
          Persistent=True
          RandomizedDelaySec=600

          [Install]
          WantedBy=timers.target
        dest: "/usr/local/lib/systemd/system/duplicity-docker-daily@.timer"
        owner: root
        mode: 0644

    - name: Enable systemd services
      ansible.builtin.systemd:
        name: "duplicity-docker@{{ item }}.service"
        enabled: yes
        daemon_reload: yes
      with_items:
        - backup
        - clean
        - remove-old-inc
        - remove-old-set

    - name: Enable systemd timers
      ansible.builtin.systemd:
        name: "duplicity-docker-{{ item.schedule }}@{{ item.name }}.timer"
        enabled: yes
        state: started
        daemon_reload: yes
      loop:
        - name: backup
          schedule: daily
        - name: clean
          schedule: weekly
        - name: remove-old-inc
          schedule: weekly
        - name: remove-old-set
          schedule: weekly

  always:
    - name: Ensure latest docker image is pulled
      community.docker.docker_image:
        name: rockhopperdk/duplicity-docker:latest
        source: pull

    - name: Cleanup gpg keys
      ansible.builtin.file:
        path: "/root/.gnupg/private.asc"
        state: absent

    - name: Cleanup ownertrust
      ansible.builtin.file:
        path: "/root/.gnupg/ownertrust"
        state: absent
