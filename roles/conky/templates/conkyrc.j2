conky.config = {
-- Managed by Ansible
-- set to yes if you want Conky to be forked in the background
-- 09-08-2014: Changed based on: https://wiki.archlinux.org/index.php/Conky#Autostart_with_Xfce4
  background = false,
  total_run_times = 0,

  xinerama_head = {{ conky_xinerama_head }},

  use_xft = true,
  font = 'mononoki:size={{ conky_fontsize }}',

  update_interval = 3.0,
  update_interval_on_battery = 6.0,
  cpu_avg_samples = 2,

  if_up_strictness = 'address',
  top_cpu_separate = true,
  top_name_width = 25,
  top_name_verbose = true,

  own_window = true,
  own_window_type = 'normal',
  own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
  own_window_argb_visual = true,
  own_window_argb_value = 170,
-- own_window_transparent = false,
-- Compton fix:
  own_window_class = 'conky',

  minimum_width = {{ conky_min_size }},
  minimum_height = 0,
  maximum_width = {{ conky_max_width }},
--draw_shades = true,
  draw_outline = false,
  draw_graph_borders = false,
--draw_borders = false,
-- Font color
  default_color = 'gray',
  default_shade_color = 'black',
-- not working:
--default_outline_color = '2a2a2a',

  alignment = 'top_left',
  gap_x = {{ conky_gap_x }},
  gap_y = {{ conky_gap_y }},

  override_utf8_locale = true,
  uppercase = true,
  format_human_readable = true,
  short_units = true,
  use_spacer = 'left',
  no_buffers = true,

  double_buffer = true,
};

conky.text = [[
${color white}${font FontAwesome:pixelsize={{ conky_fontsize_awesome }}}${font} System $color${hr 1}

Date: ${alignr}${time %A d. %d/%m/%Y (%V) %H:%M}
Uptime: ${alignr}$uptime
Kernel: ${alignr}$kernel
Update(s) available:${alignr} ${execi 3600 checkupdates | wc -l}

${color white}${font FontAwesome:pixelsize={{ conky_fontsize_awesome }}}${font} Temperatures $color${hr 1}

{# hwmon1/temp1 is physical #}
CPU: ${alignr}${hwmon 1 temp 2}°C /${hwmon 1 temp 3}°C /${hwmon 1 temp 4}°C /${hwmon 1 temp 5}°C
{% if ansible_local.hardware.vga_vendor == 'NVIDIA Corporation' %}
GPU:${alignr}${nvidia temp}°C
{% endif %}
{% for device, data in ansible_devices.iteritems() %}
{% if data.partitions is defined and data.partitions %}
{{ data.model }}: ${alignr}${hddtemp /dev/{{ device }}}°C
{% endif %}
{% endfor %}

${color white}${font FontAwesome:pixelsize={{ conky_fontsize_awesome }}}${font} CPU $color${hr 1}

{% for cpu in range(0, ansible_processor_vcpus, 2) %}
${cpugraph cpu{{ cpu+1 }} {{ conky_graph_half_size }} {{ conky_graph_color_1 }} -t} ${alignr}${cpugraph cpu{{ cpu+2 }} {{ conky_graph_half_size }} {{ conky_graph_color_2 }} -t}
${freq_g cpu{{ cpu+1 }}} GHz ${cpu cpu{{ cpu+1 }}}% ${alignr}${freq_g cpu{{ cpu+2 }}} GHz ${cpu cpu{{ cpu+2 }}}%
{% endfor %}

Highest CPU $alignr CPU% / MEM%
${top name 1}$alignr${top cpu 1} ${top mem 1}
${top name 2}$alignr${top cpu 2} ${top mem 2}
${top name 3}$alignr${top cpu 3} ${top mem 3}
${top name 4}$alignr${top cpu 4} ${top mem 4}
${top name 5}$alignr${top cpu 5} ${top mem 5}
${top name 6}$alignr${top cpu 6} ${top mem 6}
${top name 7}$alignr${top cpu 7} ${top mem 7}
${top name 8}$alignr${top cpu 8} ${top mem 8}

${color white}${font FontAwesome:pixelsize={{ conky_fontsize_awesome }}}${font} Memory $color${hr 1}

Highest MEM $alignr CPU% / MEM%
${top_mem name 1}$alignr${top_mem cpu 1} ${top_mem mem 1}
${top_mem name 2}$alignr${top_mem cpu 2} ${top_mem mem 2}
${top_mem name 3}$alignr${top_mem cpu 3} ${top_mem mem 3}
${top_mem name 4}$alignr${top_mem cpu 4} ${top_mem mem 4}
${top_mem name 5}$alignr${top_mem cpu 5} ${top_mem mem 5}
${top_mem name 6}$alignr${top_mem cpu 6} ${top_mem mem 6}
${top_mem name 7}$alignr${top_mem cpu 7} ${top_mem mem 7}
${top_mem name 8}$alignr${top_mem cpu 8} ${top_mem mem 8}

${memgraph {{ conky_graph_full_size }} {{ conky_graph_color_1 }} -t}
Ram ${alignr}$mem / $memmax ($memperc% used)

${color white}${font FontAwesome:pixelsize={{ conky_fontsize_awesome }}}${font} FILESYSTEM & I/O $color${hr 1}

Highest I/O $alignr READ / WRITE
${top_io name 1}$alignr${top_io io_read 1}   ${top_io io_write 1}
${top_io name 2}$alignr${top_io io_read 2}   ${top_io io_write 2}
${top_io name 3}$alignr${top_io io_read 3}   ${top_io io_write 3}
${top_io name 4}$alignr${top_io io_read 4}   ${top_io io_write 4}
${top_io name 5}$alignr${top_io io_read 5}   ${top_io io_write 5}
${top_io name 6}$alignr${top_io io_read 6}   ${top_io io_write 6}
${top_io name 7}$alignr${top_io io_read 7}   ${top_io io_write 7}
${top_io name 8}$alignr${top_io io_read 8}   ${top_io io_write 8}

${diskiograph_read {{ conky_graph_half_size }} {{ conky_graph_color_1 }} -t} ${alignr}${diskiograph_write {{ conky_graph_half_size }} {{ conky_graph_color_2 }} -t}
Read ${diskio_read}$alignr Write ${diskio_write}

Root: $alignr${fs_used /} /${fs_size /} (${fs_free /} / ${fs_free_perc /}% free)
${fs_bar {{conky_bar_full_size}} /}

${color white}${font FontAwesome:pixelsize={{ conky_fontsize_awesome }}}${font} NETWORK $color${hr 1}

{% for interface in ['eth0', 'enp0s25', 'ens9', 'wlp3s0'] %}
${if_up {{ interface }}}{{ interface }}:$alignr${addr {{ interface }}} / ${execi 7200 curl -s http://icanhazip.com/}
{% if interface == 'wlp3s0' %}
Wireless network: ${alignr}${wireless_essid}
Speed / Frequency: ${alignr}${wireless_bitrate {{ interface }}} / ${wireless_freq {{ interface }}}
${wireless_link_bar {{conky_bar_full_size}} {{ interface }}}
{% endif %}

${downspeedgraph {{ interface }} {{ conky_graph_half_size }} {{ conky_graph_color_1 }} -t} ${alignr}${upspeedgraph {{ interface }} {{ conky_graph_half_size }} {{ conky_graph_color_2 }} -t}
Down: ${downspeed {{ interface }}} (${totaldown {{ interface }}}) ${alignr}Up: ${upspeed {{ interface }}} (${totalup {{ interface }}})${endif}{% endfor %}
{% if ansible_local.hardware.vga_vendor == 'NVIDIA Corporation' %}


${color white}Nvidia GPU $color${hr 1}

${nvidiagraph gpufreq {{ conky_graph_half_size }} {{ conky_graph_color_1 }} -t} ${alignr}${nvidiagraph memfreq {{ conky_graph_half_size }} {{ conky_graph_color_2 }} -t}
GPU: ${nvidia gpufreq}/${nvidia gpufreqmax} MHz ${alignr} Mem: ${nvidia memfreq}/${nvidia memfreqmax} MHz

{% endif %}
]];
