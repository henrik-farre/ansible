conky.config = {
-- {{ ansible_managed }}
-- set to yes if you want Conky to be forked in the background
-- 09-08-2014: Changed based on: https://wiki.archlinux.org/index.php/Conky#Autostart_with_Xfce4
  background = false,
  total_run_times = 0,

-- xinerama_head = {{ conky_xinerama_head }},

  use_xft = true,
  font = '{{ conky_font }}',

  update_interval = 3.0,
  update_interval_on_battery = 6.0,
  cpu_avg_samples = 2,

  if_up_strictness = 'address',
  top_cpu_separate = true,
  top_name_width = 40,
  top_name_verbose = true,

  border_inner_margin = 12,

  own_window = true,
  own_window_type = 'normal',
  own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
  own_window_argb_visual = true,
  own_window_argb_value = 170,
-- own_window_transparent = false,
-- Compton fix:
  own_window_class = 'conky',

  minimum_width = {{ conky_min_size }},
  minimum_height = 1440,
  maximum_width = {{ conky_max_width }},
--draw_shades = false,
  draw_outline = false,
  draw_graph_borders = false,
  draw_borders = false,
-- Font color
  default_color = 'gray',
  default_shade_color = 'black',
-- not working:
--default_outline_color = '2a2a2a',

  alignment = 'top_left',
  gap_x = {{ conky_gap_x }},
  gap_y = {{ conky_gap_y }},

  override_utf8_locale = true,
  uppercase = true,
  format_human_readable = true,
  short_units = true,
  use_spacer = 'left',
  no_buffers = true,

  double_buffer = true,
};

conky.text = [[

${color {{ conky_heading_color }}}${font {{ conky_heading_icon_font }}} ${font}System ${hr 1}$color

Date: ${alignr}${time %A d. %d/%m/%Y (%V) %H:%M}
Uptime: ${alignr}$uptime
Kernel: ${alignr}$kernel
Update(s) available:${alignr} ${execi 3600 checkupdates | wc -l}
Zim status:${alignr} ${if_match ${execi 300 git -C ~/Documents/Zim status --porcelain | wc -l} > 0}${color red}not in ${endif}sync${color}

${font {{ conky_heading_icon_font }}}\
${if_match ${hwmon {{ conky_cpu_hwmon[0].module }} temp 1} > {{ conky_cpu_temp_scale.high.temp }}}${color {{conky_cpu_temp_scale.high.color }}}${endif}\
${if_match ${hwmon {{ conky_cpu_hwmon[0].module }} temp 1} <= {{ conky_cpu_temp_scale.high.temp }}}${if_match ${hwmon {{ conky_cpu_hwmon[0].module }} temp 1} > {{conky_cpu_temp_scale.medium.temp }}}${color {{conky_cpu_temp_scale.medium.color }}}${endif}${endif}\
${if_match ${hwmon {{ conky_cpu_hwmon[0].module }} temp 1} <= {{ conky_cpu_temp_scale.medium.temp }}}${if_match ${hwmon {{ conky_cpu_hwmon[0].module }} temp 1} > {{conky_cpu_temp_scale.low.temp }}}${color {{conky_cpu_temp_scale.low.color }}}${endif}${endif}\
${if_match ${hwmon {{ conky_cpu_hwmon[0].module }} temp 1} <= {{ conky_cpu_temp_scale.low.temp }}}${if_match ${hwmon {{ conky_cpu_hwmon[0].module }} temp 1} > {{conky_cpu_temp_scale.lowest.temp }}}${color {{conky_cpu_temp_scale.lowest.color }}}${endif}${endif}\
${if_match ${hwmon {{ conky_cpu_hwmon[0].module }} temp 1} <= {{ conky_cpu_temp_scale.lowest.temp }}}${color {{ conky_heading_color }}}${endif}\
${font}${color {{ conky_heading_color }}} Temperatures ${hr 1}$color

{# hwmonX/temp1 is physical #}
CPU: ${alignr}{% for item in conky_cpu_hwmon %}{% if item.label is defined %} {{ item.label }}:{% endif %}${hwmon {{ item.module }} temp {{ item.temp }}}°C{% if not loop.last %} /{% endif %}{% endfor %}

{% if ansible_form_factor == 'Desktop' %}
Motherboard:${alignr}${hwmon {{ conky_mb_hwmon[0].module }} temp {{ conky_mb_hwmon[0].temp }}}°C
{% endif %}
{% if 'NVIDIA Corporation' in ansible_facts.ansible_local.hardware.video|map(attribute='vendor')|list %}
GPU:${alignr}${nvidia temp}°C
{% endif %}
{% if 'Advanced Micro Devices, Inc. [AMD/ATI]' in ansible_facts.ansible_local.hardware.video|map(attribute='vendor')|list %}
GPU:${alignr}${hwmon amdgpu temp 1}°C
{% endif %}
{% for device in ansible_local.disk.blockdevices %}
{%- if device.tran == 'sata' -%}
{{ device.model|replace('_', ' ') }}: ${alignr}${hddtemp {{ device.path }}}°C
{% elif device.tran == 'nvme' %}
Nvme ({{ device.model|replace('_', ' ') }}): ${alignr}${hwmon nvme temp 1}°C
{% endif %}
{% endfor %}

${color {{ conky_heading_color }}}${font {{ conky_heading_icon_font }}} ${font}Fans ${hr 1}$color

{% if ansible_form_factor == 'Laptop' %}
Left fan: ${alignr}${hwmon 1 fan 1} RPM
Right fan: ${alignr}${hwmon 1 fan 2} RPM
{% elif ansible_form_factor == 'Notebook' %}
Fan: ${alignr}${hwmon thinkpad fan 1} RPM
{% else %}
{% for item in conky_fan_hwmon %}
{{ item.label }}: ${alignr}${hwmon {{ item.module }} fan {{item.fan}}} RPM
{% endfor %}
{% endif %}
{% if 'NVIDIA Corporation' in ansible_facts.ansible_local.hardware.video|map(attribute='vendor')|list %}
GPU Fan: ${alignr}(${nvidia fanlevel}%) ${nvidia fanspeed} RPM
{% endif %}
{% if 'Advanced Micro Devices, Inc. [AMD/ATI]' in ansible_facts.ansible_local.hardware.video|map(attribute='vendor')|list %}
GPU Fan:${alignr}${hwmon amdgpu fan 1} RPM
{% endif %}
{% if ansible_form_factor == 'Laptop' or ansible_form_factor == 'Notebook' %}

${font {{ conky_heading_icon_font }}}${if_match "$battery_status" == "charged"} ${else}${if_match "$battery_status" == "charging"} ${else}\
${if_match $battery_percent > 80}${color {{ conky_heading_color }}} ${endif}\
${if_match $battery_percent <= 80}${if_match $battery_percent > 75}${color yellow} ${endif}${endif}\
${if_match $battery_percent <= 75}${if_match $battery_percent > 50}${color orange} ${endif}${endif}\
${if_match $battery_percent <= 50}${if_match $battery_percent > 25}${color #FF8000} ${endif}${endif}\
${if_match $battery_percent < 25}${color red} ${endif}\
${endif}${endif}${font}${color {{ conky_heading_color }}}Battery (${battery_status}) ${hr 1}$color

${battery_bar {{conky_bar_full_size}}}
{% endif %}

${color {{ conky_heading_color }}}${font {{ conky_heading_icon_font }}} ${font}CPU (${execi 10 cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor}) ${hr 1}$color
{% for cpu in range(0, ansible_processor_vcpus, 4) %}
${cpugraph cpu{{ cpu+1 }} {{ conky_graph_quarter_size }} {{ conky_graph_color_1 }} -t} ${cpugraph cpu{{ cpu+2 }} {{ conky_graph_quarter_size }} {{ conky_graph_color_1 }} -t} ${cpugraph cpu{{ cpu+3 }} {{ conky_graph_quarter_size }} {{ conky_graph_color_1 }} -t} ${cpugraph cpu{{ cpu+4 }} {{ conky_graph_quarter_size }} {{ conky_graph_color_1 }} -t}
${freq_g {{ cpu+1 }}} GHz ${cpu cpu{{ cpu+1 }}}%  ${goto 89}${freq_g {{ cpu+2 }}} GHz ${cpu cpu{{ cpu+2 }}}%  ${goto 164}${freq_g {{ cpu+3 }}} GHz ${cpu cpu{{ cpu+3 }}}%  ${goto 239}${freq_g {{ cpu+4 }}} GHz ${cpu cpu{{ cpu+4 }}}%
{% endfor %}

${color {{ conky_heading_color }}}Highest CPU $alignr CPU% / MEM%${color}
{% for item in range(1,conky_max_elements+1)%}
${top name {{ item }}}$alignr${top cpu {{ item }}} ${top mem {{ item }}}
{% endfor %}

${color {{ conky_heading_color }}}${font {{ conky_heading_icon_font }}} ${font}Memory ${hr 1}$color

${color {{ conky_heading_color }}}Highest MEM $alignr CPU% / MEM%${color}
{% for item in range(1,conky_max_elements+1)%}
${top_mem name {{ item }}}$alignr${top_mem cpu {{ item }}} ${top_mem mem {{ item }}}
{% endfor %}

${memgraph {{ conky_graph_full_size }} {{ conky_graph_color_1 }} -t}
Ram ${alignr}$mem / $memmax ($memperc% used)

${color {{ conky_heading_color }}}${font {{ conky_heading_icon_font }}} ${font}FILESYSTEM & I/O ${hr 1}$color

{# Spaces are needed to align read vaules beneath header #}
${color {{ conky_heading_color }}}Highest I/O $alignr READ / WRITE${color}
{% for item in range(1,conky_max_elements+1)%}
${top_io name {{ item }}}$alignr${top_io io_read {{ item }}}   ${top_io io_write {{ item }}}
{% endfor %}

${diskiograph_read {{ conky_graph_half_size }} {{ conky_graph_color_1 }} -t} ${alignr}${diskiograph_write {{ conky_graph_half_size }} {{ conky_graph_color_1 }} -t}
Read ${diskio_read}$alignr Write ${diskio_write}

{% for mount in ansible_mounts %}
{{ mount.mount }}: $alignr${fs_used {{ mount.mount }}} /${fs_size {{ mount.mount }}} (${fs_free {{ mount.mount }}} / ${fs_free_perc {{ mount.mount }}}% free)
${if_match ${fs_free_perc {{ mount.mount }}} <= 1}${color red}${endif}${fs_bar {{conky_bar_full_size}} {{ mount.mount }}}${color}

{% endfor %}
${color {{ conky_heading_color }}}${font {{ conky_heading_icon_font }}}${if_up wlp0s20f3} ${else} ${endif}${font}NETWORK ${hr 1}$color

DNS:${alignr}$nameserver
{% for interface in ansible_interfaces %}
{% if interface in ('eth0','enp0s25','ens9','wlp3s0', 'wlp0s20f3', 'enp0s31f6', 'wwp0s20f0u7','ens4u1u1', 'enp4s0') %}
${if_up {{ interface }}}{{ interface }}:$alignr${addr {{ interface }}} / ${execi 7200 curl -s http://icanhazip.com/}
{% if interface == 'wlp3s0' or interface == 'wlp0s20f3' %}
Wireless network: ${alignr}${wireless_essid {{interface}} }
Speed / Frequency: ${alignr}${wireless_bitrate {{ interface }}} / ${wireless_freq {{ interface }}}
${wireless_link_bar {{conky_bar_full_size}} {{ interface }}}
{% endif %}

${downspeedgraph {{ interface }} {{ conky_graph_half_size }} {{ conky_graph_color_1 }} -t} ${alignr}${upspeedgraph {{ interface }} {{ conky_graph_half_size }} {{ conky_graph_color_2 }} -t}
Down: ${downspeed {{ interface }}} (${totaldown {{ interface }}}) ${alignr}Up: ${upspeed {{ interface }}} (${totalup {{ interface }}})${endif}{% endif %}{% endfor %}

{% if 'NVIDIA Corporation' in ansible_facts.ansible_local.hardware.video|map(attribute='vendor')|list %}

${color {{ conky_heading_color }}}${font {{ conky_heading_icon_font }}}${font} GPU (${nvidia modelname}) ${hr 1}$color

${nvidiagraph gpufreq 20,137 23a51c ff661c -t} ${alignr}${nvidiagraph memfreq 20,137 23a5e0 4e66e0 -t}
GPU Freq: ${nvidia gpufreq}/${nvidia gpufreqmax} MHz ${alignr} Mem Freq: ${nvidia memfreq}/${nvidia memfreqmax} MHz

${nvidiagraph gpuutil 20,290 23a51c ff661c -t}
GPU utilization: ${alignr}${nvidia gpuutil}%
{% endif %}
]];
