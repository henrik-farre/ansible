---
- block:
  - name: Clone duplicity backup scripts
    git:
      repo: https://github.com/henrik-farre/duplicity_backup_scripts.git
      dest: /tmp/dupebackup
    tags:
      - backup

  - name: Install backup scripts
    become: true
    copy:
      src: "{{ item }}"
      dest: /usr/local/sbin/
      owner: root
      group: root
      mode: 0700
      remote_src: True
    with_fileglob:
      - /tmp/dupebackup/*.sh
    tags:
      - backup

  - name: Ensure needed directories exists
    become: true
    file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
      mode: 0700
    with_items:
      - "/root/.duplicity"
      - "/root/.ssh"
      - "/root/.gnupg"
    tags:
      - backup

  - name: Install duplicity config scripts
    become: true
    template:
      src: root/dot.duplicity/conf.j2
      dest: /root/.duplicity/conf
      owner: root
      group: root
      mode: 0600
    tags:
      - backup

  - name: Install ssh config and keys
    become: true
    copy:
      src: "root/dot.ssh/{{ item }}"
      dest: "/root/.ssh/{{ item }}"
      owner: root
      group: root
      mode: 0400
    with_items:
      - config
      - id_rsa.backup
      - id_rsa.backup.pub
    tags:
      - backup

  - name: Import ssh host key
    become: true
    known_hosts:
      path: /root/.ssh/known_hosts
      name: "{{ duplicity.remote_host }}"
      key: "{{ lookup('pipe', 'ssh-keyscan -t rsa {{ duplicity.remote_host }}') }}"
    tags:
      - backup

  - name: GPG config
    become: true
    copy:
      content: |
        pinentry-mode loopback
      dest: "/root/.gnupg/gpg.conf"
      owner: root
      group: root
      mode: 0400
    tags:
      - backup

  - name: Import gpg keys, devault
    become: true
    copy:
      src: "root/gpg/private.asc.vault"
      dest: "/root/.gnupg/private.asc"
      owner: root
      group: root
      mode: 0400
    tags:
      - backup

  - name: Import ownertrust, devault
    become: true
    copy:
      src: "root/gpg/ownertrust.vault"
      dest: "/root/.gnupg/ownertrust"
      owner: root
      group: root
      mode: 0400
    tags:
      - backup

  - name: Import gpg keys
    become: true
    shell: echo "{{ duplicity.passphrase }}" | gpg --passphrase-fd 0 --import private.asc
    args:
      chdir: "/root/.gnupg"
    tags:
      - backup

  - name: Import ownertrust
    become: true
    shell: gpg --import-ownertrust ownertrust
    args:
      chdir: "/root/.gnupg"
    tags:
      - backup

  - name: Enable backup cronjob
    become: true
    template:
      src: etc/cron.d/1backup.j2
      dest: /etc/cron.d/1backup
      owner: root
      mode: 0644
    tags:
      - backup

  always:
  - name: Cleanup git clone
    file:
      path: /tmp/dupebackup
      state: absent
    tags:
      - backup
  - name: Cleanup gpg keys
    become: yes
    file:
      path: "/root/.gnupg/private.asc"
      state: absent
    tags:
      - backup
  - name: Cleanup ownertrust
    become: yes
    file:
      path: "/root/.gnupg/ownertrust"
      state: absent
    tags:
      - backup
