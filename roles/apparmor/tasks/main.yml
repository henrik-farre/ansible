---
- name: Install and configure AppArmor, audit and dependencies
  become: true
  tags:
    - apparmor
  block:
    - name: Install AppArmor, audit and dependencies on ArchLinux
      community.general.pacman:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - apparmor
          - audit
      when: ansible_facts.distribution == 'Archlinux'

    - name: Install AppArmor, audit and dependencies on Debian
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - apparmor
          - apparmor-utils
          - apparmor-profiles
          - auditd
      when: ansible_facts.distribution == 'Debian'

    - name: Ensure profiles are enabled on Debian
      ansible.builtin.file:
        src: "/usr/share/apparmor/extra-profiles/{{ item }}"
        dest: "/etc/apparmor.d/{{ item }}"
        state: link
      loop:
        - usr.sbin.sshd
        - usr.sbin.useradd
        - usr.sbin.userdel
      when: ansible_facts.distribution == 'Debian'

    - name: Ensure profiles are set to enforce on Debian
      ansible.builtin.command:
        cmd: "/usr/sbin/aa-enforce {{ item }}"
      loop:
        - usr.sbin.sshd
        - usr.sbin.useradd
        - usr.sbin.userdel
      when: ansible_facts.distribution == 'Debian'

    - name: Ensure audit group exist
      ansible.builtin.group:
        name: audit
        state: present
        system: true

    - name: Ensure users are members of audit group
      ansible.builtin.user:
        name: "{{ item }}"
        groups: audit
        append: true
      loop: "{{ groups_to_users.audit }}"
      when:
        - groups_to_users is defined
        - groups_to_users.audit is defined

    - name: Ensure audit log directory has correct permissions
      ansible.builtin.file:
        path: /var/log/audit
        state: directory
        mode: "0750"
        owner: root
        group: audit

    - name: Ensure auditd is configured correctly
      ansible.builtin.lineinfile:
        dest: "/etc/audit/auditd.conf"
        regexp: "log_group ="
        line: "log_group = audit"
        state: present

    - name: Ensure apparmor is configured correctly
      ansible.builtin.lineinfile:
        dest: "/etc/apparmor/parser.conf"
        regexp: "write-cache"
        line: "write-cache"
        state: present

    - name: Enable services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - apparmor
        - auditd

- name: Install desktop dependencies for AppArmor
  tags:
    - apparmor
    - apparmor-desktop
  when:
    - display_server is defined
  block:
    - name: Install dependencies
      become: true
      ansible.builtin.package:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - python-psutil
          - python-notify2

    - name: Ensure notifications for apparmor denied are enabled
      ansible.builtin.copy:
        dest: "{{ ansible_user_dir }}/.config/autostart/apparmor-notify.desktop"
        content: |
          [Desktop Entry]
          Type=Application
          Name=AppArmor Notify
          Comment=Receive on screen notifications of AppArmor denials
          TryExec=aa-notify
          Exec=aa-notify -p -s 1 -w 60 -f /var/log/audit/audit.log
          StartupNotify=false
          NoDisplay=true
        mode: "0640"
